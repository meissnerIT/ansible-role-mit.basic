---
# common tasks for all Debian, Raspbian and Ubuntu machines

# #19984: Automatische Aktualisierung fuer Ubuntu Rechner: cron-apt kann genutzt werden
- name: Ensure basic packages
  ansible.builtin.apt:
    pkg:
      - chrony
      - cron-apt
      - etckeeper
      - git
      - lsb-release
      - patch
      - python3
      - sudo
      - vim
      - zsh
  tags: apt

- name: Ensure basic packages (remove deprecated)
  ansible.builtin.apt:
    state: absent
    pkg:
      - apt-listchanges

- name: Calcualte cron-apt setting
  ansible.builtin.set_fact:
    cron_apt_config: >-
      {% if auto_update_system_enable|default(True)
        %}upgrade -y --with-new-pkgs -o APT::Get::Show-Upgraded=true
      {% else
        %}dist-upgrade -d -y -o APT::Get::Show-Upgraded=true
      {% endif %}

# https://unix.stackexchange.com/a/384977
- name: Configure timezone
  ansible.builtin.copy:
    dest: /etc/timezone
    content: "{{ timezone }}\n"
    mode: "644"
  when: timezone is defined
- name: Configure localtime
  ansible.builtin.file:
    src: /usr/share/zoneinfo/{{ timezone }}
    dest: /etc/localtime
    state: link
  when: timezone is defined

- name: Configure chrony ntp server (Debian < 11)
  ansible.builtin.lineinfile:
    path: /etc/chrony/chrony.conf
    # regexp: '^server '
    line: server {{ ntp_server }} iburst
  when: ntp_server is defined and (ansible_distribution == "Debian" or ansible_distribution == "Raspbian") and ansible_distribution_major_version|int < 11
  notify: Restart chrony

- name: Configure chrony ntp server (Debian >= 11)
  ansible.builtin.template:
    src: etc/chrony/sources.d/local-ntp-server.sources
    dest: /etc/chrony/sources.d/
    mode: "644"
  # This playbook supports Debian, Raspbian and Ubuntu
  when: ntp_server | default(None) != None
    and (ansible_distribution == "Debian" or ansible_distribution == "Raspbian") and ansible_distribution_major_version|int > 10
  notify: Restart chrony

- name: "Configure chrony: Disabled vendor pools"
  ansible.builtin.lineinfile:
    path: /etc/chrony/chrony.conf
    backrefs: true
    regexp: ^pool (.*)
    line: "#pool \\1"
  when: ntp_server is defined and (ansible_distribution == "Debian" or ansible_distribution == "Raspbian")

# This is needed for some Windows time server
- name: Configure chrony maxdistance
  ansible.builtin.template:
    src: etc/chrony/conf.d/local-maxdistance.conf
    dest: /etc/chrony/conf.d/
    mode: "644"
  when: chrony_maxdistance is defined

- name: Configure cron-apt
  ansible.builtin.lineinfile:
    dest: /etc/cron-apt/action.d/3-download
    regexp: Show-Upgraded=true
    line: "{{ cron_apt_config }}"
  # Raspbian reports "Debian" as ansible_distribution
  when: (ansible_distribution == "Debian") or (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int > 18)

- name: Set sudo group to "sudo"
  ansible.builtin.set_fact:
    sudo_group: sudo

- name: Copy /etc/sudoers.d/local-mit-dedicated
  ansible.builtin.copy:
    src: sudoers.d/local-mit-dedicated
    dest: /etc/sudoers.d/
    mode: "0440"
    validate: visudo -cf %s

# sudo update-alternatives --set editor /usr/bin/vim.basic
- name: Use vim as default editor
  alternatives:
    name: editor
    path: /usr/bin/vim.basic
  become: true

- name: Stat /etc/aliases
  ansible.builtin.stat:
    path: /etc/aliases
  register: etc_aliases

- name: Set mail alias for root -> {{ alias_root }}
  ansible.builtin.lineinfile:
    dest: /etc/aliases
    create: false
    regexp: "^root:"
    line: "root: {{ alias_root }}"
  notify: Newaliases
  when: etc_aliases.stat.exists
  tags: mail

- name: Install /etc/cron.daily/local-mit-disk-info
  ansible.builtin.copy:
    src: local-mit-disk-info
    dest: /etc/cron.daily/local-mit-disk-info
    mode: "0755"
- name: Copy default /etc/apt/sources.list
  become: true
  ansible.builtin.copy:
    # We use this playbook for ansible_lsb.id=(Debian|Raspbian)
    src: sources.list-Linux-{{ ansible_lsb.id }}_{{ ansible_lsb.major_release }}
    dest: /etc/apt/sources.list
    mode: "644"
  notify: Update apt cache

- name: Add 'default-terminal' to /etc/tmux.conf
  ansible.builtin.lineinfile:
    dest: /etc/tmux.conf
    create: true
    regexp: ^set -g default-terminal "tmux-256color"
    line: set -g default-terminal "tmux-256color"
    mode: "644"
  when: ansible_distribution_major_version|int < 12

- name: Check if /tmp is mounted with tmpfs
  ansible.builtin.script:
    cmd: >
      ../files/fstab-tempmounts.py -v -t '{{ mit_basic_tmp_size }}'
      /etc/fstab /etc/fstab.new
  changed_when: "'needs update' in fstab_tempmounts_py.stdout"
  register: fstab_tempmounts_py
  when: mit_basic_use_tmpfs_for_tmp is defined and mit_basic_use_tmpfs_for_tmp

- name: Replace /etc/fstab for having /tmp mounted with tmpfs
  ansible.builtin.command:
    cmd: mv -f /etc/fstab.new /etc/fstab
  when: fstab_tempmounts_py.stdout is defined and 'needs update' in fstab_tempmounts_py.stdout

- name: Ensure absence of inactive config
  ansible.builtin.file:
    path: /etc/tmpfiles.d/local-cleanup-tempdirs
    state: absent

- name: Create /etc/tmpfiles.d/local-cleanup-tempdirs.conf
  ansible.builtin.copy:
    src: tmpfiles.d/local-cleanup-tempdirs.conf
    dest: /etc/tmpfiles.d/
    mode: "644"

# Harden SSH config (#21540)
- name: Replace sshd host keys
  ansible.builtin.script:
  args:
    cmd: files/sshd-replace-keys.sh '{{ cflag }}'
    creates: "{{ cflag }}"
  notify: Restart sshd
  vars:
    # Completion flag file
    cflag: /etc/ssh/.flag.local-host-keys-replaced
  when: mit_basic_harden_ssh_debian11

- name: Copy hardened sshd config
  ansible.builtin.copy:
    src: sshd-Linux-Debian_11/local-hardening.conf
    dest: /etc/ssh/sshd_config.d/
    mode: "644"
  notify: Reload sshd
  when: mit_basic_harden_ssh_debian11

- name: Install zfs-autobackup
  ansible.builtin.include_tasks: install-zfs-autobackup.yml
  when: zfs_autobackup_enabled is defined and zfs_autobackup_enabled
- name: Set zfs_auto_snapshot_binary
  ansible.builtin.set_fact:
    zfs_autobackup_binary: /opt/zfs-autobackup/.venv/bin/zfs-autobackup
    zfs_autobackup_storage_pool: tank
- name: Setup zfs-autobackup
  ansible.builtin.include_tasks: setup-zfs-autobackup.yml
  when: zfs_autobackup_enabled is defined and zfs_autobackup_enabled
